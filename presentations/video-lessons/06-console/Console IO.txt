Let's learn about Console Inputs and Outputs.
Every program has three main phases: 
The inputs are given to the program, processing occurs, and outputs are returned.
The Inputs and Outputs are how we connect programs to the real world.
Think of it like baking.
The inputs are your ingredients.
Mixing and stirring are the processing.
Then the cake is your output.
Examples of input are data typed by a keyboard, movements made by your mouse, data from the internet, and data from sensors.
Examples of output are pixels on your screen, paper out of your printer, or the movement of a robotic arm.
Computers take in data from users and put out results.
One of the most common ways to do this is the console.
You can think of the console as like a messenger box, for giving instructions to the computer.
The instructions that we write are often stored in a program, so that they can be reused.
This is what "programs" or "code" really is.
Now let's learn how to write a very simple program by learning two kinds of commands: "Print" and "Input".
We will see these two commands as regular Python text, but also as 
BlockPy
 blocks.
The "print" function lets you write information to users.
Printing is necessary because we cannot see "inside" the mind of the computer, except what it writes on the console.
Notice that there is some text between the parentheses: this is the text that is output to the user.
The "input" function lets you get information from users.
Notice that there is some text between the parentheses: this is the text that is shown as a prompt to the user.
Once the prompt is shown, the user can type their answer and press enter.
Notice how we can combine these two commands by snapping them together.
This simple program will take some text from the user and then print it out.
The print statement does not print the word "input
" - 
it prints out what the user typed in the box.
While not a very exciting program, it is a great example of the input/output mechanism of programs.
The goal of any program is to transform the inputted data into the desired outputs.
For now, our programs will have simple inputs and simple outputs.
But eventually, we will create complex code that can achieve great things.
