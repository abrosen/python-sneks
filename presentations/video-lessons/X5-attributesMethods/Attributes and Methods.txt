Let's learn about Attributes and Methods
Classes are a mix of data and functions, which really means attributes and methods.
Typically, the body of a class will be a series of function definitions.
When functions are defined inside of a class, they are called methods.
Think of the class as owning these methods.
Objects have attributes, which are just variables stored inside the object.
The syntax for accessing and using attributes is the name of the object variable, followed by a dot, followed by the name of the attribute.
A special method is the __
init
__ method, which has double underscores around the name.
When you use a class to create an object, this method is called.
Most of the parameters will be new attributes of the class.
Every method of a class has a first parameter named "self".
This "self" parameter is how a method references the object that has called the method.
This allows the method to change the attributes of the object.
We have previously learned to call methods like "append" for lists or "split" for strings.
We start with an object, then a dot, then the name of the method, and finish with parentheses.
Notice that we do not pass anything in for the "self" parameter.
That "self" parameter is replaced with the value to the left of the period representing the object.
When you create a variable inside of a method, it will disappear once the method finishes.
If you want data to persist, you need to create a new attribute and assign it to the self object.
Classes allow us to combine data and behavior, in what is known as Encapsulation.
Object-oriented programming actually allows far more than just encapsulation, so keep in mind there's more to it than what was shown here.
